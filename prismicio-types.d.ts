// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type CliftonQuartetHomepageDocumentDataSlicesSlice =
  | RepertoireSlice
  | AnimatedInstrumentsSlice
  | HeroSlice;

/**
 * Content for Clifton Quartet Homepage documents
 */
interface CliftonQuartetHomepageDocumentData {
  /**
   * Slice Zone field in *Clifton Quartet Homepage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: clifton_quartet_homepage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<CliftonQuartetHomepageDocumentDataSlicesSlice> /**
   * Meta Title field in *Clifton Quartet Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: clifton_quartet_homepage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Clifton Quartet Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: clifton_quartet_homepage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Clifton Quartet Homepage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: clifton_quartet_homepage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Clifton Quartet Homepage document from Prismic
 *
 * - **API ID**: `clifton_quartet_homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type CliftonQuartetHomepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<CliftonQuartetHomepageDocumentData>,
    "clifton_quartet_homepage",
    Lang
  >;

/**
 * Item in *Settings → Navigation*
 */
export interface SettingsDocumentDataNavigationItem {
  /**
   * Navigation link field in *Settings → Navigation*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.navigation[].navigation_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  navigation_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Content for Settings documents
 */
interface SettingsDocumentData {
  /**
   * Site Title field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.site_title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  site_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Settings*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.meta_description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Fallback OG Image field in *Settings*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.fallback_og_image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  fallback_og_image: prismic.ImageField<never>;

  /**
   * Navigation field in *Settings*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.navigation[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  navigation: prismic.GroupField<Simplify<SettingsDocumentDataNavigationItem>>;
}

/**
 * Settings document from Prismic
 *
 * - **API ID**: `settings`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SettingsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<SettingsDocumentData>,
    "settings",
    Lang
  >;

/**
 * Item in *String Quartet Repertoire → Classical*
 */
export interface StringQuartetRepertoireDocumentDataClassicalItem {
  /**
   * Composer field in *String Quartet Repertoire → Classical*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.classical[].composer
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  composer: prismic.KeyTextField;

  /**
   * Song Title field in *String Quartet Repertoire → Classical*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.classical[].song_title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  song_title: prismic.KeyTextField;
}

/**
 * Item in *String Quartet Repertoire → Popular*
 */
export interface StringQuartetRepertoireDocumentDataPopularItem {
  /**
   * Song Title field in *String Quartet Repertoire → Popular*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.popular[].song_title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  song_title: prismic.KeyTextField;
}

/**
 * Item in *String Quartet Repertoire → Beatles*
 */
export interface StringQuartetRepertoireDocumentDataBeatlesItem {
  /**
   * Song Title field in *String Quartet Repertoire → Beatles*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.beatles[].song_title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  song_title: prismic.KeyTextField;
}

/**
 * Item in *String Quartet Repertoire → Rags*
 */
export interface StringQuartetRepertoireDocumentDataRagsItem {
  /**
   * Song Title field in *String Quartet Repertoire → Rags*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.rags[].song_title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  song_title: prismic.KeyTextField;
}

/**
 * Item in *String Quartet Repertoire → Jazz Classics*
 */
export interface StringQuartetRepertoireDocumentDataJazzClassicsItem {
  /**
   * Song Title field in *String Quartet Repertoire → Jazz Classics*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.jazz_classics[].song_title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  song_title: prismic.KeyTextField;
}

/**
 * Item in *String Quartet Repertoire → Film and Show*
 */
export interface StringQuartetRepertoireDocumentDataFilmAndShowItem {
  /**
   * Song Title field in *String Quartet Repertoire → Film and Show*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.film_and_show[].song_title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  song_title: prismic.KeyTextField;
}

/**
 * Item in *String Quartet Repertoire → Rock and Pop*
 */
export interface StringQuartetRepertoireDocumentDataRockAndPopItem {
  /**
   * Composer field in *String Quartet Repertoire → Rock and Pop*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.rock_and_pop[].composer
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  composer: prismic.KeyTextField;

  /**
   * Song Title field in *String Quartet Repertoire → Rock and Pop*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.rock_and_pop[].song_title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  song_title: prismic.KeyTextField;
}

/**
 * Content for String Quartet Repertoire documents
 */
interface StringQuartetRepertoireDocumentData {
  /**
   * Classical field in *String Quartet Repertoire*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.classical[]
   * - **Tab**: Classical
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  classical: prismic.GroupField<
    Simplify<StringQuartetRepertoireDocumentDataClassicalItem>
  > /**
   * Popular field in *String Quartet Repertoire*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.popular[]
   * - **Tab**: Popular
   * - **Documentation**: https://prismic.io/docs/field#group
   */;
  popular: prismic.GroupField<
    Simplify<StringQuartetRepertoireDocumentDataPopularItem>
  > /**
   * Beatles field in *String Quartet Repertoire*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.beatles[]
   * - **Tab**: Beatles
   * - **Documentation**: https://prismic.io/docs/field#group
   */;
  beatles: prismic.GroupField<
    Simplify<StringQuartetRepertoireDocumentDataBeatlesItem>
  > /**
   * Rags field in *String Quartet Repertoire*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.rags[]
   * - **Tab**: Rags
   * - **Documentation**: https://prismic.io/docs/field#group
   */;
  rags: prismic.GroupField<
    Simplify<StringQuartetRepertoireDocumentDataRagsItem>
  > /**
   * Jazz Classics field in *String Quartet Repertoire*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.jazz_classics[]
   * - **Tab**: Jazz Classics
   * - **Documentation**: https://prismic.io/docs/field#group
   */;
  jazz_classics: prismic.GroupField<
    Simplify<StringQuartetRepertoireDocumentDataJazzClassicsItem>
  > /**
   * Film and Show field in *String Quartet Repertoire*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.film_and_show[]
   * - **Tab**: Film and Show
   * - **Documentation**: https://prismic.io/docs/field#group
   */;
  film_and_show: prismic.GroupField<
    Simplify<StringQuartetRepertoireDocumentDataFilmAndShowItem>
  > /**
   * Rock and Pop field in *String Quartet Repertoire*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: string_quartet_repertoire.rock_and_pop[]
   * - **Tab**: Rock and Pop
   * - **Documentation**: https://prismic.io/docs/field#group
   */;
  rock_and_pop: prismic.GroupField<
    Simplify<StringQuartetRepertoireDocumentDataRockAndPopItem>
  >;
}

/**
 * String Quartet Repertoire document from Prismic
 *
 * - **API ID**: `string_quartet_repertoire`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type StringQuartetRepertoireDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<StringQuartetRepertoireDocumentData>,
    "string_quartet_repertoire",
    Lang
  >;

type ThePlayersDocumentDataSlicesSlice = HeroSlice;

/**
 * Content for The players documents
 */
interface ThePlayersDocumentData {
  /**
   * Slice Zone field in *The players*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: the_players.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<ThePlayersDocumentDataSlicesSlice> /**
   * Meta Title field in *The players*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: the_players.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *The players*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: the_players.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *The players*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: the_players.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * The players document from Prismic
 *
 * - **API ID**: `the_players`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ThePlayersDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<ThePlayersDocumentData>,
    "the_players",
    Lang
  >;

type TheRepertoireDocumentDataSlicesSlice = TheRepertoireSlice | HeroSlice;

/**
 * Content for The Repertoire documents
 */
interface TheRepertoireDocumentData {
  /**
   * Slice Zone field in *The Repertoire*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: the_repertoire.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<TheRepertoireDocumentDataSlicesSlice> /**
   * Meta Title field in *The Repertoire*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: the_repertoire.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *The Repertoire*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: the_repertoire.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *The Repertoire*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: the_repertoire.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * The Repertoire document from Prismic
 *
 * - **API ID**: `the_repertoire`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type TheRepertoireDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<TheRepertoireDocumentData>,
    "the_repertoire",
    Lang
  >;

type WeddingsAndEventsDocumentDataSlicesSlice = HeroSlice;

/**
 * Content for Weddings & Events documents
 */
interface WeddingsAndEventsDocumentData {
  /**
   * Slice Zone field in *Weddings & Events*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: weddings_and_events.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<WeddingsAndEventsDocumentDataSlicesSlice> /**
   * Meta Title field in *Weddings & Events*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: weddings_and_events.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Weddings & Events*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: weddings_and_events.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Weddings & Events*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: weddings_and_events.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Weddings & Events document from Prismic
 *
 * - **API ID**: `weddings_and_events`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type WeddingsAndEventsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<WeddingsAndEventsDocumentData>,
    "weddings_and_events",
    Lang
  >;

export type AllDocumentTypes =
  | CliftonQuartetHomepageDocument
  | SettingsDocument
  | StringQuartetRepertoireDocument
  | ThePlayersDocument
  | TheRepertoireDocument
  | WeddingsAndEventsDocument;

/**
 * Primary content in *AnimatedInstruments → Default → Primary*
 */
export interface AnimatedInstrumentsSliceDefaultPrimary {
  /**
   * Background Image field in *AnimatedInstruments → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: animated_instruments.default.primary.background_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  background_image: prismic.ImageField<never>;
}

/**
 * Default variation for AnimatedInstruments Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type AnimatedInstrumentsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<AnimatedInstrumentsSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *AnimatedInstruments*
 */
type AnimatedInstrumentsSliceVariation = AnimatedInstrumentsSliceDefault;

/**
 * AnimatedInstruments Shared Slice
 *
 * - **API ID**: `animated_instruments`
 * - **Description**: AnimatedInstruments
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type AnimatedInstrumentsSlice = prismic.SharedSlice<
  "animated_instruments",
  AnimatedInstrumentsSliceVariation
>;

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HeroSliceDefaultPrimary {
  /**
   * Background Image field in *Hero → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.background_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  background_image: prismic.ImageField<never>;

  /**
   * Title field in *Hero → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: The Clifton String Quartet
   * - **API ID Path**: hero.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  title: prismic.KeyTextField;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroSlice = prismic.SharedSlice<"hero", HeroSliceVariation>;

/**
 * Item in *VinylPlayer → Default → Primary → Repertoire Carousel*
 */
export interface RepertoireSliceDefaultPrimaryRepertoireCarouselItem {
  /**
   * Artist field in *VinylPlayer → Default → Primary → Repertoire Carousel*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: repertoire.default.primary.repertoire_carousel[].artist
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  artist: prismic.KeyTextField;

  /**
   * Song field in *VinylPlayer → Default → Primary → Repertoire Carousel*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: repertoire.default.primary.repertoire_carousel[].song
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  song: prismic.KeyTextField;
}

/**
 * Primary content in *VinylPlayer → Default → Primary*
 */
export interface RepertoireSliceDefaultPrimary {
  /**
   * Background Image field in *VinylPlayer → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: repertoire.default.primary.background_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  background_image: prismic.ImageField<never>;

  /**
   * Title field in *VinylPlayer → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: repertoire.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  title: prismic.KeyTextField;

  /**
   * Text field in *VinylPlayer → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: repertoire.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * MP3 Song field in *VinylPlayer → Default → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: mp3 audio file
   * - **API ID Path**: repertoire.default.primary.mp3_song
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  mp3_song: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Repertoire Carousel field in *VinylPlayer → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: repertoire.default.primary.repertoire_carousel[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  repertoire_carousel: prismic.GroupField<
    Simplify<RepertoireSliceDefaultPrimaryRepertoireCarouselItem>
  >;
}

/**
 * Default variation for VinylPlayer Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type RepertoireSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<RepertoireSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *VinylPlayer*
 */
type RepertoireSliceVariation = RepertoireSliceDefault;

/**
 * VinylPlayer Shared Slice
 *
 * - **API ID**: `repertoire`
 * - **Description**: Repertoire
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type RepertoireSlice = prismic.SharedSlice<
  "repertoire",
  RepertoireSliceVariation
>;

/**
 * Default variation for TheRepertoire Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TheRepertoireSliceDefault = prismic.SharedSliceVariation<
  "default",
  Record<string, never>,
  never
>;

/**
 * Slice variation for *TheRepertoire*
 */
type TheRepertoireSliceVariation = TheRepertoireSliceDefault;

/**
 * TheRepertoire Shared Slice
 *
 * - **API ID**: `the_repertoire`
 * - **Description**: TheRepertoire
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TheRepertoireSlice = prismic.SharedSlice<
  "the_repertoire",
  TheRepertoireSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      CliftonQuartetHomepageDocument,
      CliftonQuartetHomepageDocumentData,
      CliftonQuartetHomepageDocumentDataSlicesSlice,
      SettingsDocument,
      SettingsDocumentData,
      SettingsDocumentDataNavigationItem,
      StringQuartetRepertoireDocument,
      StringQuartetRepertoireDocumentData,
      StringQuartetRepertoireDocumentDataClassicalItem,
      StringQuartetRepertoireDocumentDataPopularItem,
      StringQuartetRepertoireDocumentDataBeatlesItem,
      StringQuartetRepertoireDocumentDataRagsItem,
      StringQuartetRepertoireDocumentDataJazzClassicsItem,
      StringQuartetRepertoireDocumentDataFilmAndShowItem,
      StringQuartetRepertoireDocumentDataRockAndPopItem,
      ThePlayersDocument,
      ThePlayersDocumentData,
      ThePlayersDocumentDataSlicesSlice,
      TheRepertoireDocument,
      TheRepertoireDocumentData,
      TheRepertoireDocumentDataSlicesSlice,
      WeddingsAndEventsDocument,
      WeddingsAndEventsDocumentData,
      WeddingsAndEventsDocumentDataSlicesSlice,
      AllDocumentTypes,
      AnimatedInstrumentsSlice,
      AnimatedInstrumentsSliceDefaultPrimary,
      AnimatedInstrumentsSliceVariation,
      AnimatedInstrumentsSliceDefault,
      HeroSlice,
      HeroSliceDefaultPrimary,
      HeroSliceVariation,
      HeroSliceDefault,
      RepertoireSlice,
      RepertoireSliceDefaultPrimaryRepertoireCarouselItem,
      RepertoireSliceDefaultPrimary,
      RepertoireSliceVariation,
      RepertoireSliceDefault,
      TheRepertoireSlice,
      TheRepertoireSliceVariation,
      TheRepertoireSliceDefault,
    };
  }
}
